generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cartao_credito {
  id                Int        @id @default(autoincrement()) @db.UnsignedInt
  nome_cartao       String     @db.VarChar(255)
  icone_cartao      String?     @db.VarChar(500)
  limite_cartao     Float
  limite_disponivel Float
  limite_usado      Float
  id_user           Int        @db.UnsignedInt
  users             users      @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "cartao_credito_ibfk_1")
  despesas          despesas[]
  receitas          receitas[]

  @@index([id_user], map: "id_user")
}

model categorias {
  id              Int        @id @default(autoincrement()) @db.UnsignedInt
  nome_categoria  String     @db.VarChar(255)
  icone_categoria String?     @db.VarChar(500)
  id_user         Int        @db.UnsignedInt
  users           users      @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "categorias_ibfk_1")
  despesas        despesas[]
  receitas        receitas[]

  @@index([id_user], map: "id_user")
}

model conta {
  id       Int        @id @default(autoincrement()) @db.UnsignedInt
  nome     String     @db.VarChar(255)
  saldo    Float      @default(0)
  id_user  Int        @unique(map: "id_user") @db.UnsignedInt
  users    users      @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "conta_ibfk_1")
  despesas despesas[]
  receitas receitas[]
}

model despesas {
  id               Int                       @id @default(autoincrement()) @db.UnsignedInt
  nome_despesa     String                    @db.VarChar(255)
  desc_despesa     String?                   @db.Text
  valor_despesa    Float
  data_despesa     DateTime                  @db.Date
  metodo_pagamento despesas_metodo_pagamento
  tipo_pagamento   despesas_tipo_pagamento?
  id_conta         Int?                      @db.UnsignedInt
  id_cartao        Int?                      @db.UnsignedInt
  id_categoria     Int?                      @db.UnsignedInt
  id_user          Int                       @db.UnsignedInt
  users            users                     @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "despesas_ibfk_1")
  conta            conta?                    @relation(fields: [id_conta], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "despesas_ibfk_2")
  cartao_credito   cartao_credito?           @relation(fields: [id_cartao], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "despesas_ibfk_3")
  categorias       categorias?               @relation(fields: [id_categoria], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "despesas_ibfk_4")

  @@index([id_cartao], map: "id_cartao")
  @@index([id_categoria], map: "id_categoria")
  @@index([id_conta], map: "id_conta")
  @@index([id_user], map: "id_user")
}

model receitas {
  id               Int                       @id @default(autoincrement()) @db.UnsignedInt
  nome_receita     String                    @db.VarChar(255)
  desc_receita     String?                   @db.Text
  valor_receita    Float
  data_receita     DateTime                  @db.Date
  metodo_pagamento receitas_metodo_pagamento
  id_conta         Int?                      @db.UnsignedInt
  id_cartao        Int?                      @db.UnsignedInt
  id_categoria     Int?                      @db.UnsignedInt
  id_user          Int                       @db.UnsignedInt
  users            users                     @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "receitas_ibfk_1")
  conta            conta?                    @relation(fields: [id_conta], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "receitas_ibfk_2")
  cartao_credito   cartao_credito?           @relation(fields: [id_cartao], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "receitas_ibfk_3")
  categorias       categorias?               @relation(fields: [id_categoria], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "receitas_ibfk_4")

  @@index([id_cartao], map: "id_cartao")
  @@index([id_categoria], map: "id_categoria")
  @@index([id_conta], map: "id_conta")
  @@index([id_user], map: "id_user")
}

model users {
  id             Int              @id @default(autoincrement()) @db.UnsignedInt
  nome           String           @db.VarChar(255)
  email          String           @unique(map: "email") @db.VarChar(255)
  senha          String           @db.VarChar(500)
  img_perfil     Bytes?           @db.Blob
  cartao_credito cartao_credito[]
  categorias     categorias[]
  conta          conta?
  despesas       despesas[]
  receitas       receitas[]
}

enum receitas_metodo_pagamento {
  debito
  credito
}

enum despesas_metodo_pagamento {
  debito
  credito
}

enum despesas_tipo_pagamento {
  avista
  recorrente
  parcelado
}
